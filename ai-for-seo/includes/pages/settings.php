<?php
/**
 * Renders the content of the submenu page for the AI for SEO settings page.
 *
 * @since 1.2.0
 */

if (!defined("ABSPATH")) {
    exit;
}

if (!ai4seo_can_manage_this_plugin()) {
    return;
}


// ___________________________________________________________________________________________ \\
// === PREPARE =============================================================================== \\
// ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ \\

global $ai4seo_settings;
global $ai4seo_fallback_allowed_user_roles;

// Prepare variable for the user-roles
$ai4seo_allowed_user_roles = ai4seo_get_all_possible_user_roles();

// fallback for user-roles
if (!$ai4seo_allowed_user_roles) {
    $ai4seo_allowed_user_roles = $ai4seo_fallback_allowed_user_roles;
}

$ai4seo_setting_meta_tag_output_mode_allowed_values = ai4seo_get_setting_meta_tag_output_mode_allowed_values();

$ai4seo_wordpress_language = ai4seo_get_wordpress_language();
$ai4seo_language_options = ai4seo_get_translated_generation_language_options();

if (isset($ai4seo_language_options[$ai4seo_wordpress_language])) {
    $ai4seo_wordpress_language = $ai4seo_language_options[$ai4seo_wordpress_language];
}


// ___________________________________________________________________________________________ \\
// === OUTPUT ================================================================================ \\
// ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ \\

echo "<div class='ai4seo-form'>";

    // ___________________________________________________________________________________________ \\
    // === METADATA ============================================================================== \\
    // ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ \\

    echo "<div class='card ai4seo-form-section'>";
        // Headline
        echo "<h2>";
            echo '<i class="dashicons dashicons-admin-site ai4seo-nav-tab-icon"></i>';
            echo esc_html__("Metadata", "ai-for-seo");
        echo "</h2>";


        // === AI4SEO_SETTING_VISIBLE_META_TAGS ========================================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_VISIBLE_META_TAGS;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = esc_html__("With this selection, you can choose whether to include or exclude specific meta tags from being output in the header by our plugin. This setting does not affect meta tags generated by other plugins. For example, if you already use a plugin that generates meta titles and prefer those, you may want to exclude them here.", "ai-for-seo");

        // Divider
        #echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
            echo esc_html__("Meta Tag Inclusion:", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Define variable for the selected user-roles based on plugin-settings
                $ai4seo_this_checked_values = ($ai4seo_this_setting_input_value && is_array($ai4seo_this_setting_input_value) ? $ai4seo_this_setting_input_value : array());

                // add a select / un select all checkbox
                echo ai4seo_wp_kses(ai4seo_get_select_all_checkbox($ai4seo_this_setting_input_name));
                echo "<div class='ai4seo-medium-gap'></div>";

                // Loop through all available user-roles and display checkboxes for each of them
                foreach (AI4SEO_METADATA_DETAILS as $ai4seo_this_metadata_identifier => $ai4seo_this_metadata_details) {
                    $ai4seo_this_translated_checkbox_label = $ai4seo_this_metadata_details["name"] ?? $ai4seo_this_metadata_identifier;
                    $ai4seo_this_checkbox_id = "{$ai4seo_this_setting_input_name}-{$ai4seo_this_metadata_identifier}";

                    // Determine whether this role is supported
                    $ai4seo_is_this_checkbox_checked = in_array($ai4seo_this_metadata_identifier, $ai4seo_this_checked_values);

                    echo "<label for='" . esc_attr($ai4seo_this_checkbox_id) . "' class='ai4seo-form-multiple-inputs'>";
                    echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_checkbox_id) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "[]' value='" . esc_attr($ai4seo_this_metadata_identifier) . "'" . ($ai4seo_is_this_checkbox_checked ? " checked='checked'" : "") . "/> ";
                    echo esc_html($ai4seo_this_translated_checkbox_label);

                    if ($ai4seo_this_metadata_identifier == "meta-title") {
                        echo ai4seo_get_icon_with_tooltip_tag(__("<strong>We encourage you to read this information carefully before activating the AI-generated meta title output to ensure you understand the benefits.</strong><br><br>The meta title appears in your <strong>browser's title or tab</strong>.<br><br>If it's not specified, WordPress will default to using a combination of the page, post, or product title and your website's name. While this might seem natural for visitors, search engines could consider it duplicate content, which can <strong>negatively impact SEO</strong>. Our AI-generated meta titles are optimized with additional keywords and context, which can help improve your search rankings.", "ai-for-seo"));
                    }

                    echo "<br>";
                    echo "</label>";
                }

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_METADATA_GENERATION_LANGUAGE =========================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_METADATA_GENERATION_LANGUAGE;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);

        $ai4seo_this_setting_description = "";

        if (ai4seo_is_plugin_or_theme_active(AI4SEO_THIRD_PARTY_PLUGIN_WPML)) {
            $ai4seo_this_setting_description .= sprintf(esc_html__("We detected that %s is active on your website. We use %s's built-in functions to determine the language of each content entry. For optimal results, we highly recommend using the \"Automatic\" setting to ensure accurate language detection.", "ai-for-seo"), "<strong>WPML</strong>", "<strong>WPML</strong>");
        } else {
            $ai4seo_this_setting_description .= esc_html__("If you are targeting a specific language or region, please select the appropriate language. For multi-language websites, we do not recommend setting a fixed language. Choose 'Automatic' to let the AI determine the best language for each content entry (recommended).", "ai-for-seo");
        }

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                echo esc_html__("Language for Metadata Generation", "ai-for-seo") . ":";
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                echo "<select id='" . esc_attr($ai4seo_this_setting_input_name) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                    echo ai4seo_wp_kses(ai4seo_get_generation_language_select_options_html($ai4seo_this_setting_input_value));
                echo "</select>";

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_APPLY_CHANGES_TO_THIRD_PARTY_SEO_PLUGIN ============================================= \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_APPLY_CHANGES_TO_THIRD_PARTY_SEO_PLUGINS;
        $ai4seo_sync_activated_third_party_seo_plugins = array();
        $ai4seo_active_third_party_seo_plugin_details = ai4seo_get_active_third_party_seo_plugin_details();
        $ai4seo_uses_workarounds_for_third_party_seo_plugins = false;

        foreach ($ai4seo_active_third_party_seo_plugin_details AS $ai4seo_active_third_party_seo_plugin_identifier => $ai4seo_active_third_party_seo_plugin_detail) {
            if (in_array($ai4seo_active_third_party_seo_plugin_identifier, array(AI4SEO_THIRD_PARTY_PLUGIN_SLIM_SEO, AI4SEO_THIRD_PARTY_PLUGIN_ALL_IN_ONE_SEO, AI4SEO_THIRD_PARTY_PLUGIN_SQUIRRLY_SEO, AI4SEO_THIRD_PARTY_PLUGIN_BLOG2SOCIAL))) {
                $ai4seo_uses_workarounds_for_third_party_seo_plugins = true;
                break;
            }
        }

        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = esc_html__("Activating one of the checkboxes ensures that any changes you make to a post's metadata or keyphrase within the 'AI for SEO' plugin are also applied to the selected SEO plugin(s). This allows you to further analyze SEO results using your favorite SEO plugin.", "ai-for-seo");

        if ($ai4seo_uses_workarounds_for_third_party_seo_plugins) {
            $ai4seo_this_setting_description .= "<br><br>";
            $ai4seo_this_setting_description .= __("<strong>IMPORTANT:</strong> Syncing data to the selected SEO plugins may result in permanent changes to their content. We strongly recommend backing up your data before enabling this feature.", "ai-for-seo");
        }

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Form element
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                echo esc_html__("Sync 'AI for SEO' Changes:", "ai-for-seo");
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";

                if ($ai4seo_active_third_party_seo_plugin_details) {
                    // Define variable for the selected user-roles based on plugin-settings
                    $ai4seo_sync_activated_third_party_seo_plugins = ($ai4seo_this_setting_input_value && is_array($ai4seo_this_setting_input_value) ? $ai4seo_this_setting_input_value : array());

                    // add a select / un select all checkbox
                    if (count($ai4seo_active_third_party_seo_plugin_details) > 1) {
                        echo ai4seo_wp_kses(ai4seo_get_select_all_checkbox($ai4seo_this_setting_input_name));
                        echo "<div class='ai4seo-medium-gap'></div>";
                    }

                    // Loop through all available user-roles and display checkboxes for each of them
                    foreach ($ai4seo_active_third_party_seo_plugin_details as $ai4seo_this_third_party_seo_plugin_identifier => $ai4seo_this_third_party_seo_plugin_details) {
                        // Determine whether this role is supported
                        $ai4seo_is_this_checkbox_checked = in_array($ai4seo_this_third_party_seo_plugin_identifier, $ai4seo_sync_activated_third_party_seo_plugins);
                        $ai4seo_this_checkbox_id = "{$ai4seo_this_setting_input_name}-{$ai4seo_this_third_party_seo_plugin_identifier}";

                        echo "<label for='" . esc_attr($ai4seo_this_checkbox_id) . "' class='ai4seo-form-multiple-inputs'>";
                            echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_checkbox_id) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "[]' value='" . esc_attr($ai4seo_this_third_party_seo_plugin_identifier) . "'" . ($ai4seo_is_this_checkbox_checked ? " checked='checked'" : "") . " onchange='ai4seo_toggle_sync_only_these_metadata_container();' class='ai4seo_third_party_sync_checkbox'/> ";

                            // Display the icon
                            if (!empty($ai4seo_this_third_party_seo_plugin_details["icon"])) {
                                $ai4seo_this_icon_css_class = "ai4seo-large-icon";

                                if (!empty($ai4seo_this_third_party_seo_plugin_details["icon-css-class"])) {
                                    $ai4seo_this_icon_css_class .= " " . $ai4seo_this_third_party_seo_plugin_details["icon-css-class"];
                                }

                                echo ai4seo_wp_kses(ai4seo_get_svg_tag($ai4seo_this_third_party_seo_plugin_details["icon"], $ai4seo_this_third_party_seo_plugin_details["mame"] ?? "", $ai4seo_this_icon_css_class)) . " ";
                            }

                            // Display the name
                            echo esc_html($ai4seo_this_third_party_seo_plugin_details["name"] ?? $ai4seo_this_third_party_seo_plugin_identifier);
                            echo "<br>";
                        echo "</label>";
                    }

                    echo "<p class='ai4seo-form-item-description'>";
                        echo ai4seo_wp_kses($ai4seo_this_setting_description);
                    echo "</p>";
                } else {
                    echo "<i>" . esc_html__("No supported and active third-party SEO plugins found.", "ai-for-seo") . "</i>";
                }
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_SYNC_ONLY_THESE_METADATA ========================================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_SYNC_ONLY_THESE_METADATA;

        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = __("You can choose which metadata to synchronize with the selected third-party SEO plugins.", "ai-for-seo");

        echo "<div style='display: " . ($ai4seo_sync_activated_third_party_seo_plugins ? "block" : "none") . "' id='ai4seo-sync-only-these-metadata-container'>";

            // Divider
            echo "<hr class='ai4seo-form-item-divider'>";

            // Display form elements
            echo "<div class='ai4seo-form-item'>";
                echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                echo esc_html__("Metadata to Sync with Third-Party Plugins:", "ai-for-seo") ;
                echo "</label>";

                echo "<div class='ai4seo-form-item-input-wrapper'>";
                    // Define variable for the selected user-roles based on plugin-settings
                    $ai4seo_this_checked_values = ($ai4seo_this_setting_input_value && is_array($ai4seo_this_setting_input_value) ? $ai4seo_this_setting_input_value : array());

                    // add a select / un select all checkbox
                    echo ai4seo_wp_kses(ai4seo_get_select_all_checkbox($ai4seo_this_setting_input_name));
                    echo "<div class='ai4seo-medium-gap'></div>";

                    // Loop through all available user-roles and display checkboxes for each of them
                    foreach (AI4SEO_METADATA_DETAILS as $ai4seo_this_metadata_identifier => $ai4seo_this_metadata_details) {
                        $ai4seo_this_translated_checkbox_label = $ai4seo_this_metadata_details["name"] ?? $ai4seo_this_metadata_identifier;
                        $ai4seo_this_checkbox_id = "{$ai4seo_this_setting_input_name}-{$ai4seo_this_metadata_identifier}";

                        // Determine whether this role is supported
                        $ai4seo_is_this_checkbox_checked = in_array($ai4seo_this_metadata_identifier, $ai4seo_this_checked_values);

                        echo "<label for='" . esc_attr($ai4seo_this_checkbox_id) . "' class='ai4seo-form-multiple-inputs'>";
                        echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_checkbox_id) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "[]' value='" . esc_attr($ai4seo_this_metadata_identifier) . "'" . ($ai4seo_is_this_checkbox_checked ? " checked='checked'" : "") . "/> ";
                        echo esc_html($ai4seo_this_translated_checkbox_label);

                        echo "<br>";
                        echo "</label>";
                    }

                    echo "<p class='ai4seo-form-item-description'>";
                        echo ai4seo_wp_kses($ai4seo_this_setting_description);
                    echo "</p>";
                echo "</div>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_OVERWRITE_EXISTING_META_TAGS ========================================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_OVERWRITE_EXISTING_METADATA;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = __("You can choose to overwrite existing metadata when using <u>the SEO Autopilot</u>. If this option is not selected, only missing metadata will be generated.", "ai-for-seo");
        $ai4seo_this_setting_description .= "<br><br>";
        $ai4seo_this_setting_description .= __("<strong>IMPORTANT:</strong> This will permanently overwrite existing data, including data from the selected third-party SEO plugins (see 'Synchronization' settings above). We strongly recommend backing up your data before activating the SEO Autopilot (Bulk Generation).", "ai-for-seo");

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
            echo esc_html__("Overwrite Existing Metadata (SEO Autopilot Only):", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Define variable for the selected user-roles based on plugin-settings
                $ai4seo_this_checked_values = ($ai4seo_this_setting_input_value && is_array($ai4seo_this_setting_input_value) ? $ai4seo_this_setting_input_value : array());

                // add a select / un select all checkbox
                echo ai4seo_wp_kses(ai4seo_get_select_all_checkbox($ai4seo_this_setting_input_name));
                echo "<div class='ai4seo-medium-gap'></div>";

                // Loop through all available user-roles and display checkboxes for each of them
                foreach (AI4SEO_METADATA_DETAILS as $ai4seo_this_metadata_identifier => $ai4seo_this_metadata_details) {
                    $ai4seo_this_translated_checkbox_label = $ai4seo_this_metadata_details["name"] ?? $ai4seo_this_metadata_identifier;
                    $ai4seo_this_checkbox_id = "{$ai4seo_this_setting_input_name}-{$ai4seo_this_metadata_identifier}";

                    // Determine whether this role is supported
                    $ai4seo_is_this_checkbox_checked = in_array($ai4seo_this_metadata_identifier, $ai4seo_this_checked_values);

                    echo "<label for='" . esc_attr($ai4seo_this_checkbox_id) . "' class='ai4seo-form-multiple-inputs'>";
                    echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_checkbox_id) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "[]' value='" . esc_attr($ai4seo_this_metadata_identifier) . "'" . ($ai4seo_is_this_checkbox_checked ? " checked='checked'" : "") . "/> ";
                    echo esc_html($ai4seo_this_translated_checkbox_label);

                    echo "<br>";
                    echo "</label>";
                }

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_GENERATE_METADATA_FOR_FULLY_COVERED_ENTRIES ========================================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_GENERATE_METADATA_FOR_FULLY_COVERED_ENTRIES;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = __("Enable this setting to generate and overwrite metadata using <u>The SEO Autopilot</u> even if it already contains a complete set of metadata. This can be useful to maintain a consistent metadata structure across all entries. Deactivate this setting if you only want to generate metadata for entries that are missing at least one metadata field.", "ai-for-seo");

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
            echo esc_html__("Include Complete Entries When Overwriting (SEO Autopilot Only):", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                    echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                    echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_setting_input_name) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "' value='1' class='ai4seo-single-checkbox'" . ($ai4seo_this_setting_input_value ? " checked='checked'" : "") . "/> ";
                    echo esc_html__("Yes, generate and overwrite metadata for entries that already have a full set of metadata, even those created before this plugin was installed.", "ai-for-seo");

                    echo "<br>";
                    echo "</label>";

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_META_TAG_OUTPUT_MODE ================================================================================= \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_META_TAG_OUTPUT_MODE;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                echo esc_html__("Meta Tag Output Mode", "ai-for-seo");
            echo "</label>";
            echo "<div class='ai4seo-form-item-input-wrapper'>";
                echo "<select id='" . esc_attr($ai4seo_this_setting_input_name) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                    foreach ($ai4seo_setting_meta_tag_output_mode_allowed_values AS $ai4seo_this_option_value => $ai4seo_this_option_label) {
                        echo "<option value='" . esc_attr($ai4seo_this_option_value) . "'" . ($ai4seo_this_setting_input_value == $ai4seo_this_option_value ? " selected='selected'" : "") . ">" . esc_html($ai4seo_this_option_label) . "</option>";
                    }
                echo "</select>";

                echo "<p class='ai4seo-form-item-description'>";
                    // Disable 'AI for SEO' Meta Tags
                    echo ai4seo_wp_kses(__("<strong>Disable 'AI for SEO' Meta Tags</strong>: This option disables all meta tags generated by the plugin, essentially functioning as if all options in the 'Meta Tag Inclusion' setting were deselected. It is useful when using another SEO plugin while syncing changes to that plugin (see 'Sync Changes' setting), especially if the 'Overwrite Existing Metadata' setting is enabled.", "ai-for-seo")) . "<br><br>";

                    // Force 'AI for SEO' Meta Tags
                    echo ai4seo_wp_kses(__("<strong>Force 'AI for SEO' Meta Tags</strong>: Outputs the meta tags generated by this plugin, regardless of other SEO plugins. May result in duplicate meta tags. Useful when no other SEO plugins are in use or for troubleshooting potential output issues.", "ai-for-seo")) . "<br><br>";

                    // Replace Existing Meta Tags
                    echo ai4seo_wp_kses(__("<strong>Replace Existing Meta Tags</strong>: Recommended. Replaces existing meta tags with 'AI for SEO's tags, placing them inside a single block at the top of the header for better search engine recognition. Helps clean up your HTML header. Prevents duplicate entries in your HTML header. No need to sync 'AI for SEO' data with other SEO plugins.", "ai-for-seo")) . "<br><br>";

                    // Complement Existing Meta Tags
                    echo ai4seo_wp_kses(__("<strong>Complement Existing Meta Tags</strong>: Adds missing meta tags generated by this plugin without overwriting existing ones. Keeps current meta tags intact. Recommended only when syncing and overwriting metadata from other SEO plugins (see 'Sync Changes' and 'Overwrite Existing Metadata' settings).", "ai-for-seo"));
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_METADATA_PREFIXES & AI4SEO_SETTING_METADATA_SUFFIXES =================== \\

        $ai4seo_metadata_prefix_setting_name = AI4SEO_SETTING_METADATA_PREFIXES;
        $ai4seo_metadata_suffix_setting_name = AI4SEO_SETTING_METADATA_SUFFIXES;

        // Prefix
        $ai4seo_metadata_prefix_setting_input_name = "ai4seo_{$ai4seo_metadata_prefix_setting_name}";
        $ai4seo_metadata_prefix_setting_input_value = ai4seo_get_setting($ai4seo_metadata_prefix_setting_name);

        // Suffix
        $ai4seo_metadata_suffix_setting_input_name = "ai4seo_{$ai4seo_metadata_suffix_setting_name}";
        $ai4seo_metadata_suffix_setting_input_value = ai4seo_get_setting($ai4seo_metadata_suffix_setting_name);

        // Description for both prefix and suffix
        $ai4seo_this_setting_description = esc_html__("This feature allows you to customize your metadata by adding a prefix and a suffix to each field. A prefix is text added at the beginning, and a suffix is text added at the end of your metadata. For example, you can use this feature to include your website's name, tagline, or other branding elements consistently across all new metadata.", "ai-for-seo");
        $ai4seo_this_setting_description .= "<br /><br>" . esc_html__("Please note: Prefixes and suffixes are applied to all meta tags immediately, but only if 'AI for SEO' is generating the meta tags (when the 'Meta Tag Output Mode' setting is set to 'Replace' or 'Force').", "ai-for-seo");

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label>";
                echo esc_html__("Prefix / Suffix:", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Loop through all available metadata-details and display input-fields for each of them
                foreach (AI4SEO_METADATA_DETAILS as $ai4seo_this_metadata_identifier => $ai4seo_this_metadata_details) {
                    $ai4seo_this_translated_setting_label = $ai4seo_this_metadata_details["name"] ?? $ai4seo_this_metadata_identifier;
                    $ai4seo_this_metadata_prefix_setting_input_name = "{$ai4seo_metadata_prefix_setting_input_name}[{$ai4seo_this_metadata_identifier}]";
                    $ai4seo_this_metadata_suffix_setting_input_name = "{$ai4seo_metadata_suffix_setting_input_name}[{$ai4seo_this_metadata_identifier}]";
                    $ai4seo_this_metadata_prefix_setting_input_value = $ai4seo_metadata_prefix_setting_input_value[$ai4seo_this_metadata_identifier] ?? "";
                    $ai4seo_this_metadata_suffix_setting_input_value = $ai4seo_metadata_suffix_setting_input_value[$ai4seo_this_metadata_identifier] ?? "";

                    // Display translated headline for this setting
                    echo "<div class='ai4seo-prefix-suffix-setting-holder'>";
                        echo "<div class='ai4seo-prefix-suffix-setting-headline'>";
                            echo esc_html($ai4seo_this_translated_setting_label) . ":";
                        echo "</div>";

                        // Display input for prefix
                        echo "<input type='text' class='ai4seo-prefix-suffix-setting-textfield' name='" . esc_attr($ai4seo_this_metadata_prefix_setting_input_name) . "' value='" . esc_attr($ai4seo_this_metadata_prefix_setting_input_value) . "' placeholder='" . esc_attr("Prefix") . "' maxlength='48' />";

                        echo " {" . esc_html__("TEXT", "ai-for-seo") . "} ";

                        // Display input for suffix
                        echo "<input type='text' class='ai4seo-prefix-suffix-setting-textfield' name='" . esc_attr($ai4seo_this_metadata_suffix_setting_input_name) . "' value='" . esc_attr($ai4seo_this_metadata_suffix_setting_input_value) . "' placeholder='" . esc_attr("Suffix") . "' maxlength='48' />";
                    echo "</div>";
                }

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";
    echo "</div>";


    // ___________________________________________________________________________________________ \\
    // === MEDIA ATTRIBUTES ====================================================================== \\
    // ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ \\

    echo "<div class='card ai4seo-form-section'>";
        // Headline
        echo "<h2>";
        echo '<i class="dashicons dashicons-admin-media ai4seo-nav-tab-icon"></i>';
        echo esc_html__("Media attributes", "ai-for-seo");
        echo "</h2>";


        // === AI4SEO_SETTING_ACTIVE_ATTACHMENT_ATTRIBUTES ========================================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_ACTIVE_ATTACHMENT_ATTRIBUTES;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = esc_html__("This option allows you to choose whether specific media attributes should be included or excluded from generation by our plugin. Note that this setting only affects generations going forward and does not impact media attributes created by other plugins or any existing attributes.", "ai-for-seo");

        // Divider
        #echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
            echo esc_html__("Active Media Attributes:", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Define variable for the selected user-roles based on plugin-settings
                $ai4seo_this_checked_values = ($ai4seo_this_setting_input_value && is_array($ai4seo_this_setting_input_value) ? $ai4seo_this_setting_input_value : array());

                // add a select / un select all checkbox
                echo ai4seo_wp_kses(ai4seo_get_select_all_checkbox($ai4seo_this_setting_input_name));
                echo "<div class='ai4seo-medium-gap'></div>";

                // Loop through all available user-roles and display checkboxes for each of them
                foreach (AI4SEO_ATTACHMENT_ATTRIBUTES_DETAILS as $ai4seo_this_media_attribute_identifier => $ai4seo_this_media_attribute_details) {
                    $ai4seo_this_translated_checkbox_label = $ai4seo_this_media_attribute_details["name"] ?? $ai4seo_this_media_attribute_identifier;
                    $ai4seo_this_checkbox_id = "{$ai4seo_this_setting_input_name}-{$ai4seo_this_media_attribute_identifier}";

                    // Determine whether this role is supported
                    $ai4seo_is_this_checkbox_checked = in_array($ai4seo_this_media_attribute_identifier, $ai4seo_this_checked_values);

                    echo "<label for='" . esc_attr($ai4seo_this_checkbox_id) . "' class='ai4seo-form-multiple-inputs'>";
                    echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_checkbox_id) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "[]' value='" . esc_attr($ai4seo_this_media_attribute_identifier) . "'" . ($ai4seo_is_this_checkbox_checked ? " checked='checked'" : "") . "/> ";
                    echo esc_html($ai4seo_this_translated_checkbox_label);

                    echo "<br>";
                    echo "</label>";
                }

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_ATTACHMENT_ATTRIBUTES_GENERATION_LANGUAGE ============================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_ATTACHMENT_ATTRIBUTES_GENERATION_LANGUAGE;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        if (ai4seo_is_plugin_or_theme_active(AI4SEO_THIRD_PARTY_PLUGIN_WPML)) {
            $ai4seo_this_setting_description = sprintf(
                    esc_html__(
                        "We detected that %s is active on your website. We use %s's built-in functions to determine the language of each content entry. For optimal results, we highly recommend using the \"Automatic\" setting to ensure accurate language detection. If no language could be detected, the current WordPress language (%s) will be used.",
                        "ai-for-seo"
                    ),
                    "<strong>WPML</strong>",
                    "<strong>WPML</strong>",
                    "<strong>" . $ai4seo_wordpress_language . "</strong>",
                );
        } else {
            $ai4seo_this_setting_description = sprintf(
                esc_html__("If you are targeting a specific language or region, please select the appropriate language. Choose 'Automatic' to let the AI use your WordPress language (%s). Currently, 'AI for SEO' cannot determine the context in which the media is used; therefore, fully automatic language selection, as provided for metadata generation, is not available yet but will be in a future release of this plugin.", "ai-for-seo"),
                "<strong>" . $ai4seo_wordpress_language . "</strong>",
            );
        }

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Form element
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                echo esc_html__("Language for Media Attributes Generation", "ai-for-seo") . ":";
            echo "</label>";
            echo "<div class='ai4seo-form-item-input-wrapper'>";
                echo "<select id='" . esc_attr($ai4seo_this_setting_input_name) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                    echo ai4seo_wp_kses(ai4seo_get_generation_language_select_options_html($ai4seo_this_setting_input_value));
                echo "</select>";

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_OVERWRITE_EXISTING_ATTACHMENT_ATTRIBUTES ========================================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_OVERWRITE_EXISTING_ATTACHMENT_ATTRIBUTES;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = __("You can choose to overwrite existing media attributes when using <u>The SEO Autopilot</u>. If this option is not selected, only missing media attributes will be generated.", "ai-for-seo");
        $ai4seo_this_setting_description .= "<br><br>";
        $ai4seo_this_setting_description .= __("<strong>IMPORTANT:</strong> This will permanently overwrite existing data. We strongly recommend backing up your data before activating the SEO Autopilot.", "ai-for-seo");

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
            echo esc_html__("Overwrite Existing Media Attributes:", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Define variable for the selected user-roles based on plugin-settings
                $ai4seo_this_checked_values = ($ai4seo_this_setting_input_value && is_array($ai4seo_this_setting_input_value) ? $ai4seo_this_setting_input_value : array());

                // add a select / un select all checkbox
                echo ai4seo_wp_kses(ai4seo_get_select_all_checkbox($ai4seo_this_setting_input_name));
                echo "<div class='ai4seo-medium-gap'></div>";

                // Loop through all available user-roles and display checkboxes for each of them
                foreach (AI4SEO_ATTACHMENT_ATTRIBUTES_DETAILS as $ai4seo_attachment_attribute_name => $ai4seo_attachment_attribute_details) {
                    $ai4seo_this_translated_checkbox_label = $ai4seo_attachment_attribute_details["name"] ?? $ai4seo_attachment_attribute_name;
                    $ai4seo_this_checkbox_id = "{$ai4seo_this_setting_input_name}-{$ai4seo_attachment_attribute_name}";

                    // Determine whether this role is supported
                    $ai4seo_is_this_checkbox_checked = in_array($ai4seo_attachment_attribute_name, $ai4seo_this_checked_values);

                    echo "<label for='" . esc_attr($ai4seo_this_checkbox_id) . "' class='ai4seo-form-multiple-inputs'>";
                    echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_checkbox_id) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "[]' value='" . esc_attr($ai4seo_attachment_attribute_name) . "'" . ($ai4seo_is_this_checkbox_checked ? " checked='checked'" : "") . "/> ";
                    echo esc_html($ai4seo_this_translated_checkbox_label);

                    echo "<br>";
                    echo "</label>";
                }

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_GENERATE_ATTACHMENT_ATTRIBUTES_FOR_FULLY_COVERED_ENTRIES ========================================================== \\

        $ai4seo_this_setting_name = AI4SEO_SETTING_GENERATE_ATTACHMENT_ATTRIBUTES_FOR_FULLY_COVERED_ENTRIES;
        $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
        $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
        $ai4seo_this_setting_description = __("Activate this setting to generate and overwrite media attributes using <u>The SEO Autopilot</u> even if they already contain a complete set of media attributes. This can be useful to maintain a consistent structure of media attributes across all entries. Deactivate this setting if you only want to generate media attributes for entries that are missing at least one media attribute.", "ai-for-seo");

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
            echo esc_html__("Include Complete Entries When Overwriting (SEO Autopilot Only):", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                    echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                    echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_setting_input_name) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "' value='1' class='ai4seo-single-checkbox'" . ($ai4seo_this_setting_input_value ? " checked='checked'" : "") . "/> ";
                    echo esc_html__("Yes, generate and overwrite media attributes for entries that already have a full set of media attributes, even those created before this plugin was installed.", "ai-for-seo");

                    echo "<br>";
                    echo "</label>";

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";


        // === AI4SEO_SETTING_ATTACHMENT_ATTRIBUTES_PREFIXES & AI4SEO_SETTING_ATTACHMENT_ATTRIBUTES_SUFFIXES =================== \\

        $ai4seo_attachment_attributes_prefix_setting_name = AI4SEO_SETTING_ATTACHMENT_ATTRIBUTES_PREFIXES;
        $ai4seo_attachment_attributes_suffix_setting_name = AI4SEO_SETTING_ATTACHMENT_ATTRIBUTES_SUFFIXES;
        // Prefix
        $ai4seo_attachment_attributes_prefix_setting_input_name = "ai4seo_{$ai4seo_attachment_attributes_prefix_setting_name}";
        $ai4seo_attachment_attributes_prefix_setting_input_value = ai4seo_get_setting($ai4seo_attachment_attributes_prefix_setting_name);

        // Suffix
        $ai4seo_attachment_attributes_suffix_setting_input_name = "ai4seo_{$ai4seo_attachment_attributes_suffix_setting_name}";
        $ai4seo_attachment_attributes_suffix_setting_input_value = ai4seo_get_setting($ai4seo_attachment_attributes_suffix_setting_name);

        // Description for both prefix and suffix
        $ai4seo_this_setting_description = esc_html__("This feature allows you to customize your media attributes by adding a prefix and a suffix to each field. A prefix is text added at the beginning, and a suffix is text added at the end of your media attributes. For example, you can use this feature to include your website's name, tagline, or other branding elements consistently across all new media attributes.", "ai-for-seo");
        $ai4seo_this_setting_description .= "<br /><br>" . esc_html__("Please note: Prefixes and suffixes will only be applied to newly generated media attributes and will not affect any already generated media attributes.", "ai-for-seo");

        // Divider
        echo "<hr class='ai4seo-form-item-divider'>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label>";
                echo esc_html__("Prefix / Suffix:", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Loop through all available attachment-attributes-details and display input-fields for each of them
                foreach (AI4SEO_ATTACHMENT_ATTRIBUTES_DETAILS as $ai4seo_this_attachment_attributes_identifier => $ai4seo_this_attachment_attributes_details) {
                    $ai4seo_this_translated_setting_label = $ai4seo_this_attachment_attributes_details["name"] ?? $ai4seo_this_attachment_attributes_identifier;
                    $ai4seo_this_attachment_attributes_prefix_setting_input_name = "{$ai4seo_attachment_attributes_prefix_setting_input_name}[{$ai4seo_this_attachment_attributes_identifier}]";
                    $ai4seo_this_attachment_attributes_suffix_setting_input_name = "{$ai4seo_attachment_attributes_suffix_setting_input_name}[{$ai4seo_this_attachment_attributes_identifier}]";
                    $ai4seo_this_attachment_attributes_prefix_setting_input_value = $ai4seo_attachment_attributes_prefix_setting_input_value[$ai4seo_this_attachment_attributes_identifier] ?? "";
                    $ai4seo_this_attachment_attributes_suffix_setting_input_value = $ai4seo_attachment_attributes_suffix_setting_input_value[$ai4seo_this_attachment_attributes_identifier] ?? "";

                    // Display translated headline for this setting
                    echo "<div class='ai4seo-prefix-suffix-setting-holder'>";
                        echo "<div class='ai4seo-prefix-suffix-setting-headline'>";
                            echo esc_html($ai4seo_this_translated_setting_label) . ":";
                        echo "</div>";

                        // Display input for prefix
                        echo "<input type='text' class='ai4seo-prefix-suffix-setting-textfield' name='" . esc_attr($ai4seo_this_attachment_attributes_prefix_setting_input_name) . "' value='" . esc_attr($ai4seo_this_attachment_attributes_prefix_setting_input_value) . "' placeholder='" . esc_attr("Prefix") . "' maxlength='48' />";

                        echo " {" . esc_html__("TEXT", "ai-for-seo") . "} ";

                        // Display input for suffix
                        echo "<input type='text' class='ai4seo-prefix-suffix-setting-textfield' name='" . esc_attr($ai4seo_this_attachment_attributes_suffix_setting_input_name) . "' value='" . esc_attr($ai4seo_this_attachment_attributes_suffix_setting_input_value) . "' placeholder='" . esc_attr("Suffix") . "' maxlength='48' />";
                    echo "</div>";
                }

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";
    echo "</div>";


    // ___________________________________________________________________________________________ \\
    // === USER MANAGEMENT ======================================================================= \\
    // ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ \\

    $ai4seo_this_setting_name = AI4SEO_SETTING_ALLOWED_USER_ROLES;
    $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
    $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
    $ai4seo_this_setting_description = esc_html__("Please select the user roles that should have access to this plugin. Only roles with the 'edit_posts' capability will be listed.", "ai-for-seo");

    echo "<div class='card ai4seo-form-section'>";
        // Headline
        echo "<h2>";
        echo '<i class="dashicons dashicons-admin-users ai4seo-nav-tab-icon"></i>';
        echo esc_html__("User Management", "ai-for-seo");
        echo "</h2>";

        // Display form elements
        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>";
                echo esc_html__("Allowed User Roles:", "ai-for-seo") ;
            echo "</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Define variable for the selected user-roles based on plugin-settings
                $ai4seo_this_checked_values = ($ai4seo_this_setting_input_value && is_array($ai4seo_this_setting_input_value) ? $ai4seo_this_setting_input_value : array());

                // add a select / un select all checkbox
                echo ai4seo_wp_kses(ai4seo_get_select_all_checkbox($ai4seo_this_setting_input_name));
                echo "<div class='ai4seo-medium-gap'></div>";

                // Loop through all available user-roles and display checkboxes for each of them
                foreach ($ai4seo_allowed_user_roles as $ai4seo_this_user_role_identifier => $ai4seo_this_user_role) {
                    $ai4seo_this_translated_checkbox_label = translate_user_role($ai4seo_this_user_role);

                    if ($ai4seo_this_translated_checkbox_label) {
                        $ai4seo_this_user_role = $ai4seo_this_translated_checkbox_label;
                    }

                    $ai4seo_this_checkbox_id = "{$ai4seo_this_setting_input_name}-{$ai4seo_this_user_role_identifier}";

                    // Determine whether this role is supported
                    $ai4seo_is_this_checkbox_checked = (in_array($ai4seo_this_user_role_identifier, $ai4seo_this_checked_values) || $ai4seo_this_user_role_identifier == "administrator");

                    echo "<label for='" . esc_attr($ai4seo_this_checkbox_id) . "' class='ai4seo-form-multiple-inputs'>";
                        echo "<input type='checkbox' id='" . esc_attr($ai4seo_this_checkbox_id) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "[]' value='" . esc_attr($ai4seo_this_user_role_identifier) . "'" . ($ai4seo_is_this_checkbox_checked ? " checked='checked'" : "") . ($ai4seo_this_user_role_identifier == "administrator" ? " class='ai4seo-disabled-form-input' disabled='disabled'" : "") . " /> ";
                        echo esc_html($ai4seo_this_user_role);
                        echo "<br>";
                    echo "</label>";
                }

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";
    echo "</div>";

    // === EXPERIMENTAL ================================================================================= \\

    $ai4seo_this_setting_name = AI4SEO_SETTING_BULK_GENERATION_DURATION;
    $ai4seo_this_setting_input_name = ai4seo_get_prefixed_input_name($ai4seo_this_setting_name);
    $ai4seo_this_setting_input_value = ai4seo_get_setting($ai4seo_this_setting_name);
    $ai4seo_this_setting_description = "";

    if (ai4seo_is_wordpress_cron_disabled()) {
        $ai4seo_this_setting_description = __("For best results, set the duration of each SEO Autopilot run to match your cron job frequency. \"AI for SEO\" performs optimally when server cron jobs run every minute and this setting is set to \"1 minute\" (default), ensuring the best balance between performance and processing efficiency.", "ai-for-seo");
    } else {
        $ai4seo_this_setting_description = "<strong>" . __("Attention:", "ai-for-seo") . "</strong> ";
        $ai4seo_this_setting_description .= __("WordPress' internal cron system is currently enabled on your server, which may limit the plugin's ability to perform the SEO Autopilot efficiently. We recommend setting up a server cron job to run every minute for optimal performance. If you need assistance, please contact your hosting provider. If setting up a server cron job is not an option, you can try gradually increasing the duration of each SEO Autopilot run to enhance bulk generation throughput.", "ai-for-seo");
    }

    $ai4seo_this_setting_description .= "<br /><br />";
    $ai4seo_this_setting_description .= __("If your server experiences performance issues during bulk generation, try reducing the duration of each SEO Autopilot run to ensure it can handle the load effectively.", "ai-for-seo");

    echo "<div class='card ai4seo-form-section'>";
        // Headline
        echo "<h2>";
            echo '<i class="dashicons dashicons-sos ai4seo-nav-tab-icon"></i>';
            echo esc_html__("Experimental", "ai-for-seo");
        echo "</h2>";

        echo "<div class='ai4seo-form-item'>";
            echo "<label for='" . esc_attr($ai4seo_this_setting_input_name) . "'>" . esc_html__("SEO Autopilot (Bulk Generation) Duration", "ai-for-seo") . ":</label>";

            echo "<div class='ai4seo-form-item-input-wrapper'>";
                // Bulk generation duration  select field, containing 10, 20, 30, 40, 50, 60, 120, 180, 240 and 300
                echo "<select class='ai4seo-editor-select' id='" . esc_attr($ai4seo_this_setting_input_name) . "' name='" . esc_attr($ai4seo_this_setting_input_name) . "' value='" . esc_attr($ai4seo_this_setting_input_value) . "'>";
                    for ($ai4seo_this_duration = 10; $ai4seo_this_duration <= 50; $ai4seo_this_duration += 10) {
                        echo "<option value='" . esc_attr($ai4seo_this_duration) . "' " . selected($ai4seo_this_setting_input_value, $ai4seo_this_duration, false) . ">" . sprintf(esc_html__("%s seconds", "ai-for-seo"), $ai4seo_this_duration) . "</option>";
                    }
                    for ($ai4seo_this_duration = 60; $ai4seo_this_duration <= 300; $ai4seo_this_duration += 60) {
                        echo "<option value='" . esc_attr($ai4seo_this_duration) . "' " . selected($ai4seo_this_setting_input_value, $ai4seo_this_duration, false) . ">" . sprintf(esc_html(_n("%s minute", "%s minutes", ($ai4seo_this_duration / 60), "ai-for-seo")), number_format_i18n($ai4seo_this_duration / 60)) . "</option>";
                    }
                echo "</select>";
                echo "<div class='ai4seo-medium-gap'></div>";

                echo "<p class='ai4seo-form-item-description'>";
                    echo ai4seo_wp_kses($ai4seo_this_setting_description);
                echo "</p>";
            echo "</div>";
        echo "</div>";
    echo "</div>";

    // Submit button
    echo "<div class='ai4seo-buttons-wrapper'>";
        echo "<button type='button' onclick='ai4seo_save_anything(jQuery(this), ai4seo_validate_settings_inputs);' class='button ai4seo-button ai4seo-submit-button ai4seo-big-button'>" . esc_html__("Save changes", "ai-for-seo") . "</button>";
    echo "</div>";
echo "</div>";